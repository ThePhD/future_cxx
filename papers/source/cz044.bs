<pre class='metadata'>
Title: CZ044 07.7 Resolution - Allow constexpr construct_at/destroy_at for automatic storage duration
Shortname: P0330
Revision: 8
Audience: CWG
Status: P
Group: WG21
URL: 
!Target: C++23
!Latest: <a href="https://thephd.github.io/vendor/future_cxx/papers/cz044.html">https://thephd.github.io/vendor/future_cxx/papers/cz044.html</a>
Repository: ThePhD/future_cxx
Editor: JeanHeyd Meneide, phdofthehouse@gmail.com
Abstract: This paper proposes core language fixes for CZ044.
Date: 2019-11-06
Markup Shorthands: markdown yes, biblio yes, markup yes
</pre>

<pre class=include>
path: wording_style.bs
</pre>




# Revision History # {#changelog}

- Initial release.



# Resolution for NB Comment CZ044 # {#resolution}

This is the resolution to [NB Comment CZ 044](https://github.com/cplusplus/nbballot/issues/43), for std::construct_at and std::destroy_at on automatic storage duration variables.

## Proposed Resolution ## {#resolution-modification}

Change [expr.const/5.1-2] to read as follows:

<del>
<p><sup>5.1</sup> —  for a call to std​::​construct_­at or std​::​ranges​::​construct_­at, the first argument, of type T*, does not point to storage allocated with std​::​allocator<T> or the evaluation of the underlying constructor call is not a core constant expression, or</p>
<p><sup>5.2</sup> —  for a call to std​::​destroy_­at or std​::​ranges​::​destroy_­at, the first argument, of type T*, does not point to storage allocated with std​::​allocator<T> or the evaluation of the underlying destructor call is not a core constant expression.</p>
</del>

<ins><p>
<p><sup>5.1</sup> —  for a call to std::construct_­at or std::ranges::construct_­at, the first argument, of type T*, does not point to either storage allocated with std::allocator<T> or an object with automatic storage duration of type T, or the evaluation of the underlying constructor call is not a core constant expression, or</p>
<p><sup>5.2</sup> —  for a call to std::destroy_­at or std::ranges::destroy_­at, the first argument, of type T*, does not point to either storage allocated with std::allocator<T> or an object with automatic storage duration of type T, or the evaluation of the underlying destructor call is not a core constant expression.</p>
</p></ins>
