# Introduction & Motivation # {#intro}

During the Wednesday, June 4<sup>th<sup>, 2025 [[sg22-minutes-0|SG22 meeting]], a few invididuals voiced some potential concern that the ordering of parameters -- particularly `limit` and `offset` -- could confuse users. While it was pointed out that the formula that applied was the same no matter the ordering of parameters and that the entire `#embed` directive needed to be processed no matter what order was used, some still voiced a preference for providing a hard error about providing e.g. the `offset(...)` parameter in an `#embed` directive after the `limit(...)` parameter.

To answer their concerns, this paper proposes 2 versions of the same text. One is a hard-error based wording (ill-formed "shall" in C++, a shall-based wording under a Constraints section in C++). The other is a soft-error/warning based wording ("Recommended practice" section in both C++ and C). It is left up to the Committee to choose.

As it stands now, no implementation currently imposes an ordering. The parameters can be provided in any order and it does not change behavior. This is both the C23 behavior for existing parameters, and the extension parameters such as `gnu::offset` and `clang::offset`.

Note: The paper authors for `#embed` and the `offset` parameter ([[p3540]], [[n3490]]), as well as this paper, do not care and thinks this is not worth the investment. Nevertheless, the Committees can decide if they want it, and in what form.





# Design # {#design}

The design for this is not any kind of in-depth and is simple. According to both the discussion in SG22 and just generally understanding the consequences of justifying "the order of operations is important" (even if it, again, does not matter for existing implementations and nobody has implemented it like that), there's 3 general principles here.

- `offset` needs to appear before `limit` because it is applied in the algorithm before the `limit` is calculated.
- `limit` needs to appear before `if_empty`, `prefix`, and `suffix`.
- if `limit` is not present, `offset` still needs to come before `if_empty`, `prefix`, and `suffix`.

The reason for the second and third constraints is because needs to be in this order because it changes whether or not the resource is considered empty of not (and thus affects whether or not any of the following parameters trigger).
