<pre class='metadata'>
Title: #embed Preprocessor Parameter Order
H1: <code>#embed</code> Preprocessor Parameter Order
Shortname: P3731
Revision: 0
Status: P
Date: 2025-06-05
Group: WG21
Audience: EWG, SG22
Editor: JeanHeyd Meneide, phdofthehouse@gmail.com
Editor: Shepherd (Shepherd's Oasis LLC), shepherd@soasis.org
URL: https://thephd.dev/_vendor/future_cxx/papers/d3137.html
!Latest: <a href="https://thephd.dev/_vendor/future_cxx/papers/d3137.html">https://thephd.dev/_vendor/future_cxx/papers/d3137.html</a>
!Implementation: <a href="https://github.com/ThePhD/embed">GitHub ThePhD/embed</a>
!Paper Source: <a href="https://github.com/ThePhD/future_cxx/blob/main/papers/source/d3137.bs">GitHub ThePhD/future_cxx</a>
Metadata Order: Editor, Latest, Paper Source, Implementation, Project, Audience
Markup Shorthands: markdown yes
Toggle Diffs: no
Abstract: Preprocessor embed has a fixed behavior no matter which parameter ordering is chosen. This paper attempts to enforce or encourage the ordering of preprocessor parameters to prevent mental mistakes from users.
</pre>

<pre class="include-raw">
path: resources/css/bikeshed-wording.html
</pre>

<div class="pagebreak"></div>




# Changelog # {#changelog}



## Revision 0 - June 5<sup>th</sup>, 2025 ## {#changelog-r0}

- Initial release.




<pre class="include">
path: Preprocessor Embed Parameter Order Core.bs
</pre>




# Wording # {#wording}

This wording is relative to C++'s latest working draft.



## Intent ## {#wording-intent}

The intent of this wording is to provide 2 options for the Committee to chose from:

- ill-formed if the order of parameters is not in the way that the Committee demands it;
- or, recommended practice to diagnose the ordering of parameters.

The choice is left to a vote by the Evolution Working Groups.



## Proposed Language Wording ## {#wording-specification}


### HARD ERROR VERSION: Add a new paragraph after (currently) paragraph 12 in [**cpp.embed.gen**] ### {#wording-specification-cpp.embed.gen.p12.constraints}

<blockquote>
<div class="wording-section">
<div>
…
</div>

<div class="wording-numbered wording-numbered-11">

The method by which a sequence of preprocessing tokens between a `<` and a `>` preprocessing token pair or a pair of `"` characters is combined into a single resource name preprocessing token is implementation-defined.
</div>

<ins>
<div class="wording-newnumbered">

Certain preprocessor parameters have to appear before other preprocessor embed parameters in a specific order.

- `offset`, if present, shall appear before `limit`, if present.
- both `offset` and `limit`, if present, shall appear before `if_empty`, `prefix`, and `suffix`.

[ Note: Similar diagnostics for implementation-defined embed parameters, which may be better understood in a specific order, also have the potential to clarify semantics. - end Note ]
</div>
</ins>

</div>
</blockquote>




### RECOMMENDED PRACTICE: Add a new paragraph after (currently) paragraph 12 in [cpp.embed.gen] ### {#wording-specification-cpp.embed.gen.p12.recommended}

<blockquote>
<div class="wording-section">

<div>
…
</div>

<div class="wording-numbered wording-numbered-11">

The method by which a sequence of preprocessing tokens between a `<` and a `>` preprocessing token pair or a pair of `"` characters is combined into a single resource name preprocessing token is implementation-defined.
</div>

<ins>
<div class="wording-newnumbered">

_Recommended Practice:_ Certain embed parameters should appear before other preprocessor embed parameters in a specific order.

- `offset`, if present, should appear before `limit`, if present.
- both `offset` and `limit`, if present, should appear before any of `if_empty`, `prefix`, or `suffix`.

This aids in comprehension, as no matter where an `offset` appears, it is always applied before the value in a `limit` parameter. Similarly, as `limit` and `offset` can change if a resource is considered empty or not, each of these should appear in their proper order before `if_empty`, `suffix`, or `prefix`. Implementations should consider applying similar diagnostics for implementation-defined embed parameters which might potentially be better understood in a specific order.
</div>
</ins>

</div>
</blockquote>



<pre class="include">
path: Preprocessor Embed Parameter Order Footer.bs
</pre>
