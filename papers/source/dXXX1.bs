<pre class='metadata'>
Title: std::embed
Shortname: DXXX1
Revision: 0
Audience: EWG, LEWG
Status: D
Group: WG21
URL: 
!Latest: <a href="https://thephd.github.io/vendor/future_cxx/papers/dXXX1.html">https://thephd.github.io/vendor/future_cxx/papers/dXXX1.html</a>
Repository: ThePhD/future_cxx
Editor: JeanHeyd Meneide, phdofthehouse@gmail.com
!Reply To: <a href="phdofthehouse@gmail.com">JeanHeyd Meneide</a>, <a href="https://twitter.com/thephantomderp">@thephantomderp</a>
Abstract: A proposal for a function that allows pulling resources at compile-time into a program.
Date: 2018-11-26
Markup Shorthands: markdown yes, biblio yes, markup yes
</pre>

<pre class=include>
path: wording_style.bs
</pre>




# Revision History # {#changelog}



## Revision 0 - May 11th, 2018 ## {#changelog-r0}

    Initial release.




# Motivation # {#motivation}

When creating the `std::embed` proposal ([[p1040]]), many people began to point out their reservations at having someone that innately affects the behavior and compilation of a program without a way to easily and cleanly scan or determine said dependency thanks to `constexpr` magic.



<pre class=biblio>
{
	"n4762": {
		"authors": [
			"ISO/IEC JTC1/SC22/WG21 - The C++ Standards Committee",
			"Richard Smith"
		],
		"title": "N4762 - Working Draft, Standard for Programming Language C++",
		"href": "http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/n4762.pdf",
		"date": "May 7th, 2018"
	},
	"p1040": {
		"authors": [
			"JeanHeyd Meneide"
		],
		"title": "std::embed",
		"href": "https://wg21.link/p1040",
		"date": "October 12th, 2018"
	}
}
</pre>
